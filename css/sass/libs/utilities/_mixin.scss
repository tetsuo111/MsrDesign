@charset "utf-8";

@mixin link-color($color) {
	color: $color;
	&:hover {
		color: lighten($color, 20%);
	}
}

@mixin opacity($opacity) {
	opacity: $opacity;
	$ieopacity: ($opacity * 100);
	filter: alpha(opacity=$ieopacity);
}

@mixin font-size($size, $base: 16) {
	font-size: $size + px;
	font-size: ($size / $base) + rem;
}

@mixin truncate($width: 100%) {
	width: $width;
	max-width: 100%;
	display: block;
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
}

@mixin border-radius($radius) {
	border-radius: $radius;
}
@mixin border-top-left-radius($radius) {
	border-top-left-radius: $radius;
}
@mixin border-top-right-radius($radius) {
	border-top-right-radius: $radius;
}
@mixin border-bottom-right-radius($radius) {
	border-bottom-right-radius: $radius;
}
@mixin border-bottom-left-radius($radius) {
	border-bottom-left-radius: $radius;
}

@mixin flex-center{
	display: flex;
	align-items: center;
}

@mixin justify-content($property){
	justify-content: $property;
}
@mixin flex-vertical{
	flex-direction: column;
}

@mixin accordion-rate($rate){
	@if $rate == 0 {
		background-position: left;
	}@else if $rate > 0{
		background-position: $rate * -68px;
	}
}

@mixin mq-up($breakpoint: md) {
	@media #{map-get($breakpoint-up, $breakpoint)} {
		@content;
	}
}

@mixin mq-down($breakpoint: md) {
	@media #{map-get($breakpoint-down, $breakpoint)} {
		@content;
	}
}
