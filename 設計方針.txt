/*******************************************************************************
 * ■記述方針
 *   「OOCSS」というオブジェクト指向でのCSS記述の考え方で実装します。
 *
 * ■具体例
 *   構造と見た目を分離する形の記述となります。
 *   ※例（Bootstrap）
 *	 ・"btn"クラス（ボタンの基本スタイル）
 *	 ・"btn-primary"クラス（ボタンの色など見た目のスタイル）など
 *		<div class="btn btn-primary"></div>
 *   上記のような構成とすることで、見た目を変更する場合に用意されたものか、
 *   新たなクラスを定義しそれを指定することで見た目を変更します。
 *   （基本となる構造を変える場合には、別途それを定義することになります）
 *
 * ■命名規則
 *   ベースとなるクラスは、その内容に合致する名前を指定ください。
 *	 ※例：アコーディオンであれば「accordion」
 *   見た目のクラスについては、[ベースクラス]＋「-」＋「内容に合った名称」
 *	 ※例：フッターのベースクラスは「footer」であるので、
 *		   見た目のクラスは、「footer-title」のようになります。
 *   ただし、CSSフレームワークのクラスの場合は、その限りではありません。
 *
 * ■ルール
 *   [1] HTMLタグの要素での指定はしない方向でお願いします。
 *	   ※例：h1 {〜} / div.title {〜}
 *	   ただ、<li>など毎回クラスの指定が不要な場合や、特定のタグ内で利用される
 *	   spanやiタグなどは対象外とします。
 *   [2] セレクターは「孫要素」までとしてください。
 *	   ※例： .親 .子 .孫 {} (4つ以降はなし)
 *   [3] マージンやパディング、フォントサイズなどは、"rem"単位で指定してください。
 *	   Bulmaでは 1rem = 16px となっています。
 *	   0.125rem = 2px / 0.25rem = 4px となります。
 *	   （※1rem = 10px としたいのですが、そうすると全体のバランスが崩れるためしていません）
 *   [4] marginに関しては、上下左右のいずれか１つのみであれば、
 *	   View側で調整(把握)しやすいように、mt-*/mb-* を指定してください。
 *	   複数のmarginを指定する場合には、各クラスで指定ください。
 *
 * ■CSSフレームワーク
 *   「Bulma」というCSSフレームワークを利用します。
 *   ※詳細：http://bulma.io/documentation/overview/start/
 *******************************************************************************/